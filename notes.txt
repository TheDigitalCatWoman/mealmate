notes:
ook functioneel ontwerp moet 1 bestand zijn ,met alle fotos & ingeleverd worden als pdf.

Op te leveren producten
Functioneel ontwerp document in .pdf​ formaat daarin o.a. 
Functionele- en niet-functionele-eisen
De broncode van een React webapplicatie. Let op: deze moet worden bijgevoegd, alleen de GitHub link is niet voldoende.
Verantwoordingsdocument in .pdf​ (dit mag apart of als onderdeel van het functioneel ontwerp)
Wanneer het product niet voldoet aan de Quick Scan, wordt jouw opdracht afgekeurd en geretourneerd zonder feedback. Controleer dit daarom altijd goed in de opdracht-beschrijving.

Deelopdracht 3. Broncode React
In de eerste opdracht heb je uitgewerkt wat de applicatie moet kunnen en hoe deze eruit moet zien. In
deze opdracht ga je jouw schermontwerpen als basis gebruiken om de webapplicatie te
implementeren in React. Jouw webapplicatie heeft minimaal de volgende eigenschappen:
• Een gedeelte van de content is alleen beschikbaar voor ingelogde gebruikers (bijvoorbeeld een
profielpagina). Gebruikers kunnen zich zowel registreren als inloggen. Hiervoor wordt
gebruikgemaakt van React Context en de NOVI-backend*. De documentatie voor het gebruik
van deze backend vind je hier.
• Er wordt gebruikgemaakt van externe data om zo, naast eigen content, ook andere informatie
te kunnen gebruiken. Deze data moet worden opgehaald door middel van netwerk requests
naar een API**. Voorbeelden hiervan zijn weersvoorspelling data, de IMDB-database, een
receptendatabase, de Fake Store API, etc.
• De applicatie ondersteunt, naast inloggen/registreren, nog 3 belangrijke kernfunctionaliteiten
die je hebt bedacht rondom het gebruik van de API. Bijvoorbeeld:
o Kernfunctionaliteit 1: Als gebruiker kun je je registreren en inloggen.
o Kernfunctionaliteit 2: Als ingelogde gebruiker kun je aangeven naar wat voor weer je
opzoekt bent, uitgedrukt in bijvoorbeeld: temperatuur, zon (in UV), windrichting,
windkracht, regen.
o Kernfunctionaliteit 3: Als ingelogde gebruiker …
o Kernfunctionaliteit 4: Als ingelogde gebruiker …
• Er wordt gebruikgemaakt van routing waardoor gebruikers naar verschillende webpagina’s in
de applicatie kunnen navigeren.
• Je voorziet de applicatie van globale en lokale opmaak en maakt layouts met behulp van CSS
Flexbox. Je schrijft je styling zelf en maakt géén gebruik van out of the box styling systemen
zoals Bootstrap, Material-UI of Tailwind. Het gebruik van iconpacks zoals Fontawesome is wel
toegestaan.
• Je maakt gebruik van Git om jouw project te beheren en zet daarom jouw project zo snel
mogelijk op GitHub. Je zorgt voor kleine beschrijvende commits, maakt pull requests voor iedere
nieuwe feature en mergt regelmatig naar de main branch.
Let op! Voldoe je niet aan de minimale eisen per onderdeel? Dan ontvang je 0 punten.
Lees zorgvuldig nog de beoordelingscriteria door op pagina 13.
* Tenzij je een andere backend gebruikt. Indien hiervoor gekozen wordt, mag dit alleen: een Firebase
backend zijn óf de backend zijn die eerder is gemaakt in de Backend leerlijn. Deze moet dan opnieuw
worden ingeleverd samen met deze opdracht. Hiervoor zullen geen extra punten worden toegekend.
** Gebruik je een eigen backend? Ook dan maak je daarnaast nog gebruik van een externe API.
Op te leveren:
• Projectmap met daarin de broncode, inclusief de link naar de Github repository in de
README.md

Deelopdracht 4. Installatiehandleiding
In de voorgaande opdrachten heb je je ontwikkelwerk afgerond. Om ervoor te zorgen dat ook andere
ontwikkelaars jouw project kunnen gebruiken, is het belangrijk een installatiehandleiding te schrijven
waarin beschreven wordt wat ze hiervoor nodig hebben. Je schrijft je installatiehandleiding voor een
mede-developer, maar zorgt ervoor dat dit ook te volgen is wanneer deze persoon geen enkele
ervaring heeft binnen het frontend-landschap.
Het bevat:
• Een inleiding met korte beschrijving van de functionaliteit van de applicatie en screenshot van
de belangrijkste pagina van de applicatie.
• Lijst van benodigdheden om de applicatie te kunnen runnen (zoals runtime environments, een
API key of gegevens van een externe backend). Let op: je vraagt de nakijkende docent nooit zelf
een API key aan te maken. Jij levert zelf je API key aan in de handleiding;
• Een stappenplan met daarin installatie-instructies.
• Met welke gegevens er ingelogd kan worden indien er al accounts beschikbaar zijn.
• Welke andere npm commando’s er nog beschikbaar zijn in deze applicatie en waar deze voor
dienen.
Let op! Voldoe je niet aan de minimale eisen per onderdeel? Dan ontvang je 0 punten.
Lees zorgvuldig nog de beoordelingscriteria door op pagina 13.
Op te leveren:
• Zelfgeschreven README.md in de root van de React projectmap (.md)